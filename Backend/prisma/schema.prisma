generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model delivery {
  id           String   @id @db.VarChar(255)
  address      String   @db.VarChar(255)
  city         String   @db.VarChar(255)
  state        String   @db.VarChar(255)
  orderDate    DateTime
  country      String   @db.VarChar(255)
  expectedDate DateTime
  postalCode   String   @db.VarChar(255)
  tel          String   @db.VarChar(255)
  tel2         String   @db.VarChar(255)
  status       String   @db.VarChar(255)
  eventId      String   @db.VarChar(255)

  @@index([eventId], map: "Delivery_eventId_fkey")
}

model event {
  id              String        @id @db.VarChar(255)
  title           String?       @db.VarChar(255)
  category        String        @db.VarChar(255)
  venue           String        @db.VarChar(255)
  date            DateTime
  start_time      String
  end_time        String
  timezone        String?       @db.VarChar(255)
  image           String?       @db.VarChar(255)
  descCeleb       String?       @db.VarChar
  summary         String?       @db.VarChar
  descSummary     String?       @db.VarChar
  published       Boolean
  applyDonation   Boolean
  percentDonation Int
  coHostCode      String        @db.VarChar(6)
  coHostLink      String        @db.VarChar(100)
  eventLink       String        @db.VarChar(100)
  guestCode       String        @db.VarChar(6)
  user_id         String
  created_at      DateTime
  host            String        @db.VarChar(255)
  gifts           gift[]
  co_hosts        user[]
  Guests          Guests[]
  FundRaising     FundRaising[]

  @@index([host], map: "Event_userId_fkey")
}

model gift {
  id                 String  @id @db.VarChar(255)
  giftItemId         String  @db.VarChar(255)
  enableContribution Boolean
  purchased          Boolean
  quantity           Int
  purchasedBy        String  @db.VarChar(255)
  status             String  @db.VarChar(255)
  complimentaryGift  String  @db.VarChar(255)
  amountPaid         Int
  eventId            String? @db.VarChar(255)
  event              event?  @relation(fields: [eventId], references: [id])

  @@index([eventId], map: "Gift_eventId_fkey")
  @@index([giftItemId], map: "Gift_giftItemId_fkey")
  @@index([purchasedBy], map: "Gift_purchasedBy_fkey")
}

model marketGift {
  id          String @id @db.VarChar(255)
  giftItemId  String @db.VarChar(255)
  quantity    Int
  purchasedBy String @db.VarChar(255)
  status      String @db.VarChar(255)
  amountPaid  Int
}

model giftitem {
  id       String  @id @db.VarChar(255)
  title    String? @db.VarChar(255)
  category String  @db.VarChar(255)
  image    String? @db.VarChar(255)
  details  String? @db.VarChar(255)
  amount   Int
}

model complimentarygift {
  id       String  @id @db.VarChar(255)
  title    String? @db.VarChar(255)
  category String  @db.VarChar(255)
  image    String? @db.VarChar(255)
  details  String? @db.VarChar(255)
  amount   Int
}

model user {
  id                   String                 @id @db.VarChar(255)
  firstname            String                 @db.VarChar(255)
  lastname             String                 @db.VarChar(255)
  gender               String?                @db.VarChar(255)
  placeOfResidence     String?                @db.VarChar(255)
  tel                  String?                @db.VarChar(255)
  state                String?                @db.VarChar(255)
  dob                  String?                @db.VarChar(255)
  emailVerified        Boolean?
  email                String                 @unique
  password             String                 @db.VarChar(255)
  eventId              String?                @db.VarChar(255)
  event                event?                 @relation(fields: [eventId], references: [id])
  role                 Role                   @default(USER)
  Media                Media[]
  ComplimentaryMessage ComplimentaryMessage[]
  Guests               Guests[]
}

enum Role {
  USER
  ADMIN
}

model otp {
  id      String   @id @db.VarChar(50)
  code    String   @db.VarChar(5)
  expires DateTime
  user    String   @db.VarChar(100)
}

model Guests {
  id          String   @id @db.VarChar(50)
  eventId     String   @db.VarChar(50)
  coHost      Boolean
  user        user     @relation(fields: [userId], references: [id])
  userId      String   @db.VarChar(255)
  event       event    @relation(fields: [eventId], references: [id])
  date_joined DateTime @default(now())
}

model FundRaising {
  id                  String                @id @db.VarChar(50)
  eventId             String                @db.VarChar(50)
  event               event                 @relation(fields: [eventId], references: [id])
  amount              Int
  amountPaid          Int
  active              Boolean
  title               String                @default("") @db.VarChar(255)
  description         String                @default("") @db.VarChar
  image               String                @default("") @db.VarChar(255)
  FundRaisingDonation FundRaisingDonation[]
}

model FundRaisingDonation {
  id        String      @id @db.VarChar(50)
  fundId    String      @db.VarChar(50)
  fund      FundRaising @relation(fields: [fundId], references: [id])
  firstName String      @db.VarChar(50)
  lastName  String      @db.VarChar(50)
  email     String      @db.VarChar(50)
  phone     String      @db.VarChar(50)
  amount    Int
  date      DateTime
}

model asoebiitem {
  id                String              @id @db.VarChar(255)
  title             String?             @db.VarChar(255)
  category          String              @db.VarChar(255)
  image             String?             @db.VarChar(255)
  details           String?             @db.VarChar
  amount            Int
  asoebiTransaction asoebiTransaction[]
}

model asoebi {
  id                String              @id @db.VarChar(255)
  asoebiItem        String              @db.VarChar(255)
  quantity          Int
  amountPaid        Int
  eventId           String?             @db.VarChar(255)
  userId            String?             @db.VarChar(255)
  increment         Int
  purchasedByHost   Boolean             @default(false)
  asoebiTransaction asoebiTransaction[]
}

model asoebiTransaction {
  id           String      @id @db.VarChar(50)
  aseobi       asoebi      @relation(fields: [asoebiId], references: [id])
  amount       Int
  date         DateTime
  asoebiId     String      @db.VarChar(255)
  purchasedBy  String      @db.VarChar(50)
  quantity     Int
  delivered    Boolean     @default(false)
  eventId      String      @db.VarChar(50)
  asoebiitem   asoebiitem? @relation(fields: [asoebiitemId], references: [id])
  asoebiitemId String?     @db.VarChar(255)
}

model sourvenirItem {
  id        String      @id @db.VarChar(255)
  title     String?     @db.VarChar(255)
  category  String      @db.VarChar(255)
  image     String?     @db.VarChar(255)
  details   String?     @db.VarChar
  amount    Int
  sourvenir sourvenir[]
}

model sourvenir {
  id              String        @id @db.VarChar(255)
  sourvenirItem   sourvenirItem @relation(fields: [sourvenirItemId], references: [id])
  quantity        Int
  purchased       Boolean       @default(false)
  eventId         String?       @default("") @db.VarChar(255)
  userId          String?       @db.VarChar(255)
  sourvenirItemId String        @db.VarChar(255)
}

model MediaFile {
  id                     String                @id @db.VarChar(255)
  url                    String                @db.VarChar(255)
  mediaId                String
  Media                  Media                 @relation(fields: [mediaId], references: [id])
  ComplimentaryMessage   ComplimentaryMessage? @relation(fields: [complimentaryMessageId], references: [id])
  complimentaryMessageId String?               @db.VarChar(255)
}

model Media {
  id         String      @id @db.VarChar(255)
  eventId    String      @db.VarChar(255)
  user       user        @relation(fields: [userId], references: [id])
  userId     String      @db.VarChar(255)
  date       DateTime    @default(now())
  uploadedBy USERTYPE
  data       MediaFile[]
}

enum USERTYPE {
  GUEST
  HOST
}

model ComplimentaryMessage {
  id      String      @id @db.VarChar(255)
  eventId String      @db.VarChar(255)
  user    user        @relation(fields: [userId], references: [id])
  userId  String      @db.VarChar(255)
  date    DateTime    @default(now())
  message String      @db.VarChar
  media   MediaFile[]
}
